"use strict";(self.webpackChunklm_commons=self.webpackChunklm_commons||[]).push([[2424],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(n),g=a,d=m["".concat(c,".").concat(g)]||m[g]||u[g]||i;return n?r.createElement(d,o(o({ref:t},l),{},{components:n})):r.createElement(d,o({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6682:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={},o="Strategies",s={unversionedId:"lmc-rbac-mvc/guides/strategies",id:"lmc-rbac-mvc/guides/strategies",title:"Strategies",description:"In this section, you will learn:",source:"@site/docs/lmc-rbac-mvc/guides/05-strategies.md",sourceDirName:"lmc-rbac-mvc/guides",slug:"/lmc-rbac-mvc/guides/strategies",permalink:"/docs/lmc-rbac-mvc/guides/strategies",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Guards",permalink:"/docs/lmc-rbac-mvc/guides/guards"},next:{title:"Using the Authorization Service",permalink:"/docs/lmc-rbac-mvc/guides/using-the-authorization-service"}},c={},p=[{value:"What are strategies?",id:"what-are-strategies",level:2},{value:"Built-in strategies",id:"built-in-strategies",level:2},{value:"RedirectStrategy",id:"redirectstrategy",level:3},{value:"UnauthorizedStrategy",id:"unauthorizedstrategy",level:3},{value:"Creating custom strategies",id:"creating-custom-strategies",level:2}],l={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"strategies"},"Strategies"),(0,a.kt)("p",null,"In this section, you will learn:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"What strategies are"),(0,a.kt)("li",{parentName:"ul"},"How to use built-in strategies"),(0,a.kt)("li",{parentName:"ul"},"How to create custom strategies")),(0,a.kt)("h2",{id:"what-are-strategies"},"What are strategies?"),(0,a.kt)("p",null,"A strategy is an object that listens to the ",(0,a.kt)("inlineCode",{parentName:"p"},"MvcEvent::EVENT_DISPATCH_ERROR")," event. It is used to describe what\nhappens when access to a resource is unauthorized by LmcRbacMvc."),(0,a.kt)("p",null,"LmcRbacMvc strategies all check if an ",(0,a.kt)("inlineCode",{parentName:"p"},"LmcRbacMvc\\Exception\\UnauthorizedExceptionInterface")," has been thrown."),(0,a.kt)("p",null,"By default, LmcRbacMvc does not register any strategy for you. The best place to register it is in your ",(0,a.kt)("inlineCode",{parentName:"p"},"onBootstrap"),"\nmethod of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Module.php")," class:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"public function onBootstrap(MvcEvent $e)\n{\n    $app = $e->getApplication();\n    $sm = $app->getServiceManager();\n    $em = $app->getEventManager();\n    \n    $listener = $sm->get(\\LmcRbacMvc\\View\\Strategy\\UnauthorizedStrategy::class);\n    $listener->attach($em);\n}\n")),(0,a.kt)("h2",{id:"built-in-strategies"},"Built-in strategies"),(0,a.kt)("p",null,"LmcRbacMvc comes with two built-in strategies: ",(0,a.kt)("inlineCode",{parentName:"p"},"RedirectStrategy")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"UnauthorizedStrategy"),"."),(0,a.kt)("h3",{id:"redirectstrategy"},"RedirectStrategy"),(0,a.kt)("p",null,"This strategy allows your application to redirect any unauthorized request to another route by optionally appending the previous\nURL as a query parameter."),(0,a.kt)("p",null,"To register it, copy-paste this code into your Module.php class:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"public function onBootstrap(MvcEvent $e)\n{\n    $app = $e->getApplication();\n    $sm = $app->getServiceManager();\n    $em = $app->getEventManager();\n    \n    $listener = $sm->get(\\LmcRbacMvc\\View\\Strategy\\RedirectStrategy::class);\n    $listener->attach($em);\n}\n")),(0,a.kt)("p",null,"You can configure the strategy using the ",(0,a.kt)("inlineCode",{parentName:"p"},"redirect_strategy")," subkey:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"return [\n    'lmc_rbac' => [\n        'redirect_strategy' => [\n            'redirect_when_connected'        => true,\n            'redirect_to_route_connected'    => 'home',\n            'redirect_to_route_disconnected' => 'login',\n            'append_previous_uri'            => true,\n            'previous_uri_query_key'         => 'redirectTo'\n        ],\n    ]\n];\n")),(0,a.kt)("p",null,"If users try to access an unauthorized resource (eg.: ",(0,a.kt)("a",{parentName:"p",href:"http://www.example.com/delete"},"http://www.example.com/delete"),'), they will be\nredirected to the "login" route if is not connected and to the "home" route otherwise (it must exist in your route configuration\nof course) with the previous URL appended : ',(0,a.kt)("a",{parentName:"p",href:"http://www.example.com/login?redirectTo=http://www.example.com/delete"},"http://www.example.com/login?redirectTo=http://www.example.com/delete")),(0,a.kt)("p",null,"You can prevent redirection when a user is connected (i.e. so that the user gets a 403 page) by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"redirect_when_connected")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("h3",{id:"unauthorizedstrategy"},"UnauthorizedStrategy"),(0,a.kt)("p",null,"This strategy allows your application to render a template on any unauthorized request."),(0,a.kt)("p",null,"To register it, copy-paste this code into your Module.php class:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"public function onBootstrap(MvcEvent $e)\n{\n    $app = $e->getApplication();\n    $sm = $app->getServiceManager();\n    $em = $app->getEventManager();\n    \n    $listener = $sm->get(\\LmcRbacMvc\\View\\Strategy\\UnauthorizedStrategy::class);\n    $listener->attach($em);\n}\n")),(0,a.kt)("p",null,"You can configure the strategy using the ",(0,a.kt)("inlineCode",{parentName:"p"},"unauthorized_strategy")," subkey:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"return [\n    'lmc_rbac' => [\n        'unauthorized_strategy' => [\n            'template' => 'error/custom-403'\n        ],\n    ]\n];\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"By default, LmcRbacMvc uses a template called ",(0,a.kt)("inlineCode",{parentName:"p"},"error/403"),".")),(0,a.kt)("h2",{id:"creating-custom-strategies"},"Creating custom strategies"),(0,a.kt)("p",null,"Creating a custom strategy is rather easy. Let's say we want to create a strategy that integrates with\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/laminas-api-tools/api-tools-api-problem"},"ApiProblem")," Laminas Api Tools module:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"namespace Application\\View\\Strategy;\n\nuse Laminas\\Http\\Response as HttpResponse;\nuse Laminas\\Mvc\\MvcEvent;\nuse Laminas\\ApiTools\\ApiProblem\\ApiProblem;\nuse Laminas\\ApiTools\\ApiProblem\\ApiProblemResponse;\nuse LmcRbacMvc\\View\\Strategy\\AbstractStrategy;\nuse LmcRbacMvc\\Exception\\UnauthorizedExceptionInterface;\n\nclass ApiProblemStrategy extends AbstractStrategy\n{\n    public function onError(MvcEvent $event)\n    {\n        // Do nothing if no error or if response is not HTTP response\n        if (!($exception = $event->getParam('exception') instanceof UnauthorizedExceptionInterface)\n            || ($result = $event->getResult() instanceof HttpResponse)\n            || !($response = $event->getResponse() instanceof HttpResponse)\n        ) {\n            return;\n        }\n\n        return new ApiProblemResponse(new ApiProblem($exception->getMessage()));\n    }\n}\n")),(0,a.kt)("p",null,"Register your strategy:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"public function onBootstrap(EventInterface $e)\n{\n    $e->getTarget()\n      ->getEventManager()\n      ->attach(new ApiProblemStrategy());\n}\n")))}u.isMDXComponent=!0}}]);