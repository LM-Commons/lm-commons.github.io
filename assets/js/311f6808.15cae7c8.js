"use strict";(self.webpackChunklm_commons=self.webpackChunklm_commons||[]).push([[841],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8460:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={},o="Quick Start",c={unversionedId:"lmc-rbac-mvc/guides/quick-start",id:"lmc-rbac-mvc/guides/quick-start",title:"Quick Start",description:"In this section, you will learn:",source:"@site/docs/lmc-rbac-mvc/guides/02-quick-start.md",sourceDirName:"lmc-rbac-mvc/guides",slug:"/lmc-rbac-mvc/guides/quick-start",permalink:"/docs/lmc-rbac-mvc/guides/quick-start",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/lmc-rbac-mvc/guides/introduction"},next:{title:"Role providers",permalink:"/docs/lmc-rbac-mvc/guides/role-providers"}},l={},s=[{value:"Specifying an identity provider",id:"specifying-an-identity-provider",level:2},{value:"Adding a guard",id:"adding-a-guard",level:2},{value:"Adding a role provider",id:"adding-a-role-provider",level:2},{value:"Registering a strategy",id:"registering-a-strategy",level:2},{value:"Using the authorization service",id:"using-the-authorization-service",level:2}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"quick-start"},"Quick Start"),(0,i.kt)("p",null,"In this section, you will learn:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"How to set up the module"),(0,i.kt)("li",{parentName:"ul"},"How to specify an identity provider"),(0,i.kt)("li",{parentName:"ul"},"How to add a simple role provider")),(0,i.kt)("p",null,"Before starting the quick start, make sure you have properly installed the module by following the instructions in\nthe README file."),(0,i.kt)("h2",{id:"specifying-an-identity-provider"},"Specifying an identity provider"),(0,i.kt)("p",null,"By default, LmcRbacMvc internally uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"Laminas\\Authentication\\AuthenticationService")," service key to retrieve the user (logged or\nnot). Therefore, you must implement and register this service in your application by adding these lines in your ",(0,i.kt)("inlineCode",{parentName:"p"},"module.config.php")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"return [\n    'service_manager' => [\n        'factories' => [\n            'Laminas\\Authentication\\AuthenticationService' => function($sm) {\n                // Create your authentication service!\n            }\n        ]\n    ]\n];\n")),(0,i.kt)("p",null,"The identity given by ",(0,i.kt)("inlineCode",{parentName:"p"},"Laminas\\Authentication\\AuthenticationService")," must implement ",(0,i.kt)("inlineCode",{parentName:"p"},"LmcRbacMvc\\Identity\\IdentityInterface"),". Note that the default identity provided with Laminas does not implement this interface, neither does the LmcUser suite."),(0,i.kt)("p",null,"LmcRbacMvc is flexible enough to use something other than the built-in ",(0,i.kt)("inlineCode",{parentName:"p"},"AuthenticationService"),", by specifying custom\nidentity providers. For more information, refer ",(0,i.kt)("a",{parentName:"p",href:"/docs/lmc-rbac-mvc/guides/role-providers#identity-providers"},"to this section"),"."),(0,i.kt)("h2",{id:"adding-a-guard"},"Adding a guard"),(0,i.kt)("p",null,"A guard allows your application to block access to routes and/or controllers using a simple syntax. For instance, this configuration\ngrants access to any route that begins with ",(0,i.kt)("inlineCode",{parentName:"p"},"admin")," (or is exactly ",(0,i.kt)("inlineCode",{parentName:"p"},"admin"),") to the ",(0,i.kt)("inlineCode",{parentName:"p"},"admin")," role only:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"return [\n    'lmc_rbac' => [\n        'guards' => [\n            'LmcRbacMvc\\Guard\\RouteGuard' => [\n                'admin*' => ['admin']\n            ]\n        ]\n    ]\n];\n")),(0,i.kt)("p",null,"LmcRbacMvc has several built-in guards, and you can also register your own guards. For more information, refer\n",(0,i.kt)("a",{parentName:"p",href:"/docs/lmc-rbac-mvc/guides/guards#built-in-guards"},"to this section"),"."),(0,i.kt)("h2",{id:"adding-a-role-provider"},"Adding a role provider"),(0,i.kt)("p",null,"RBAC model is based on roles. Therefore, for LmcRbacMvc to work properly, it must be aware of all the roles that are\nused inside your application."),(0,i.kt)("p",null,"This configuration creates an ",(0,i.kt)("em",{parentName:"p"},"admin")," role that has a child role called ",(0,i.kt)("em",{parentName:"p"},"member"),". The ",(0,i.kt)("em",{parentName:"p"},"admin")," role automatically\ninherits the ",(0,i.kt)("em",{parentName:"p"},"member")," permissions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"return [\n    'lmc_rbac' => [\n        'role_provider' => [\n            'LmcRbacMvc\\Role\\InMemoryRoleProvider' => [\n                'admin' => [\n                    'children'    => ['member'],\n                    'permissions' => ['delete']\n                ],\n                'member' => [\n                    'permissions' => ['edit']\n                ]\n            ]\n        ]\n    ]\n];\n")),(0,i.kt)("p",null,"In this example, the ",(0,i.kt)("em",{parentName:"p"},"admin")," role has two permissions: ",(0,i.kt)("inlineCode",{parentName:"p"},"delete")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"edit")," (because it inherits the permissions from\nits child), while the ",(0,i.kt)("em",{parentName:"p"},"member")," role only has the ",(0,i.kt)("inlineCode",{parentName:"p"},"edit")," permission."),(0,i.kt)("p",null,"LmcRbacMvc has several built-in role providers, and you can also register your own role providers. For more information,\nrefer ",(0,i.kt)("a",{parentName:"p",href:"/docs/lmc-rbac-mvc/guides/role-providers#built-in-role-providers"},"to this section"),"."),(0,i.kt)("h2",{id:"registering-a-strategy"},"Registering a strategy"),(0,i.kt)("p",null,"When a guard blocks access to a route/controller, or if you throw the ",(0,i.kt)("inlineCode",{parentName:"p"},"LmcRbacMvc\\Exception\\UnauthorizedException"),"\nexception in your service, LmcRbacMvc automatically performs some logic for you depending on the view strategy used."),(0,i.kt)("p",null,'For instance, if you want LmcRbacMvc to automatically redirect all unauthorized requests to the "login" route, add\nthe following code in the ',(0,i.kt)("inlineCode",{parentName:"p"},"onBootstrap")," method of your ",(0,i.kt)("inlineCode",{parentName:"p"},"Module.php")," class:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"public function onBootstrap(MvcEvent $e)\n{\n    $app = $e->getApplication();\n    $sm = $app->getServiceManager();\n    $em = $app->getEventManager();\n    \n    $listener = $sm->get(\\LmcRbacMvc\\View\\Strategy\\RedirectStrategy::class);\n    $listener->attach($em);\n}\n")),(0,i.kt)("p",null,"By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"RedirectStrategy"),' redirects all unauthorized requests to a route named "login" when the user is not connected\nand to a route named "home" when the user is connected. This is, of course, entirely configurable.'),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"For flexibility purposes, LmcRbacMvc ",(0,i.kt)("strong",{parentName:"p"},"does not")," register any strategy for you by default!")),(0,i.kt)("p",null,"For more information about built-in strategies, refer ",(0,i.kt)("a",{parentName:"p",href:"/docs/lmc-rbac-mvc/guides/strategies#built-in-strategies"},"to this section"),"."),(0,i.kt)("h2",{id:"using-the-authorization-service"},"Using the authorization service"),(0,i.kt)("p",null,"Now that LmcRbacMvc is properly configured, you can inject the authorization service into any class and use it to check\nif the current identity is granted to do something."),(0,i.kt)("p",null,"The authorization service is registered inside the service manager using the following key: ",(0,i.kt)("inlineCode",{parentName:"p"},"LmcRbacMvc\\Service\\AuthorizationService"),".\nOnce injected, you can use it as follow:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use LmcRbacMvc\\Exception\\UnauthorizedException;\n\nclass ActionController extends  \\Laminas\\Mvc\\Controller\\AbstractActionController {\npublic function delete()\n{\n    if (!$this->authorizationService->isGranted('delete')) {\n        throw new UnauthorizedException();\n    }\n\n    // Delete the post\n}\n}\n")))}p.isMDXComponent=!0}}]);